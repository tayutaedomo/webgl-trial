<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>three.js WebVR</title>
  <script type="text/javascript" src="/javascripts/threejs_r94/three.js"></script>
  <script type="text/javascript" src="/javascripts/threejs_r94/examples/WebVR.js"></script>
  <script type="text/javascript" src="/javascripts/threejs_r85/examples/VRControls.js"></script>
<!--  <script type="text/javascript" src="/javascripts/webvr-polyfill.js"></script>-->
</head>
<body style="margin: 0">

  <script type="text/javascript">
    window.addEventListener("DOMContentLoaded", function(){
      var width = window.innerWidth;
      var height = window.innerHeight;

      var renderer, scene, camera, mesh, controls;

      init();
      anim();

      function init() {
        renderer = new THREE.WebGLRenderer();
        renderer.setSize(width, height);
        document.body.appendChild(renderer.domElement);

        scene = new THREE.Scene();

        camera = new THREE.PerspectiveCamera(90, width/height, 1, 1000);
        camera.position.set(0, 0, 5); // (x, y, z)
        scene.add(camera);

        mesh = new THREE.Mesh(
                new THREE.CubeGeometry(1.5, 1.5, 1.5),
                new THREE.MeshNormalMaterial({ color:0xffff00 }));
        scene.add(mesh);


        var button = WEBVR.createButton(renderer, { frameOfReferenceType: 'head-model' });
        if (button) {
          document.body.appendChild(button);
          button.addEventListener('click', function(e) {
            if (renderer) renderer.vr.enabled = true;
            controls = new THREE.VRControls(camera);
          });
        }

        // var polyfill = new WebVRPolyfill();
      }

      function anim() {
        requestAnimationFrame(anim);

        if (renderer.vr.enabled) {
          // A build in function that can be used instead of requestAnimationFrame. For WebVR projects this function must be used.
          renderer.setAnimationLoop(renderer_webgl);
        }

        mesh.rotation.x += 0.01;
        mesh.rotation.y += 0.01;

        renderer.render(scene, camera);
      }

      function renderer_webgl(){
        mesh.rotation.x += 0.01;
        mesh.rotation.y += 0.01;

        if (controls) controls.update();
        renderer.render(scene, camera);
      }
    });
  </script>

</body>
</html>

