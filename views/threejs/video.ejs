<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>three.js Video</title>
  <script type="text/javascript" src="/javascripts/three.js"></script>
</head>
<body>

<div>
  <button onClick="drawVideo()">Scan</button>
  <button onClick="play()">Play</button>
  <button onClick="pause()">Pause</button>
  <button onClick="hide()">Hide</button>
  <button onClick="show()">Show</button>
  <button onClick="updateTexture()">Draw</button>
</div>

<script>
  var scene = new THREE.Scene();

  var fov = 75;

  var height = 600;
  var width = 400;
  var aspect = height/width;

  var near = 1;
  var far = 1000;

  var camera = new THREE.PerspectiveCamera(fov, aspect, near, far);
  camera.position.set(0, 15, 70);

  var renderer = new THREE.WebGLRenderer();
  renderer.setSize(height, width);
  document.body.appendChild(renderer.domElement);

  var color = 'white';
  var directionalLight = new THREE.DirectionalLight(color);
  directionalLight.position.set(0, 7, 10);
  scene.add(directionalLight);

  var video;
  var canvas;
  var width = 256;
  var height = 256;

  function setTexture() {
    video = document.createElement('video');
    video.setAttribute('id', 'v');
    video.setAttribute('width', width);
    //video.setAttribute('height', height);
    video.setAttribute('controls', true);
    video.setAttribute('src', 'http://vjs.zencdn.net/v/oceans.mp4');
    //video.style.display = 'none';
    document.body.appendChild(video);

    canvas = document.createElement('canvas');
    canvas.setAttribute('id', 'c');
    canvas.style.display = 'none';
    //canvas.getContext("2d").drawImage(video, 0, 0, width, height);
    document.body.appendChild(canvas);

    var texture = THREE.CanvasTexture(canvas);
    //texture.needsUpdate = true;

    return texture;
  }

  function drawVideo() {
    canvas.getContext("2d").drawImage(video, 0, 0, width, height);
  }

  function play() {
    if (! video) return;
    video.play();
  }

  function pause() {
    if (! video) return;
    video.pause();
  }

  function hide() {
    if (! video) return;
    video.style.display = 'none';
    canvas.style.display = 'none';
  }

  function show() {
    if (! video) return;
    video.style.display = 'block';
    canvas.style.display = 'block';
  }

  var geometry = new THREE.PlaneGeometry(40, 40, 1, 1);
  var material = new THREE.MeshBasicMaterial({ map: setTexture(), color: 'orange' });
  material.needsUpdate = true;
  var plane = new THREE.Mesh(geometry, material);

  plane.position.set(0, 0, 0);

  scene.add(plane);

  function updateTexture() {
    canvas.getContext("2d").drawImage(video, 0, 0, width, height);
    //plane.material.map = new THREE.CanvasTexture(canvas);
    render();
  }

  function render() {
    renderer.render(scene, camera);
  }
  render();
</script>
</body>
</html>

